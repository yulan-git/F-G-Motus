{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/btn-keyboard/btn-keyboard.component.ts","./src/app/directives/color.directive.ts","./src/app/directives/modal.directive.ts","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/home.page.ts","./src/app/letters-grid/letters-grid.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-keyboard',\r\n  templateUrl: './btn-keyboard.component.html',\r\n  styleUrls: ['./btn-keyboard.component.scss'],\r\n})\r\nexport class BtnKeyboardComponent implements OnInit {\r\n  @Input() btn: string;\r\n  @Output() letter = new EventEmitter<string>()\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  getLetterInput(letter: string){\r\n    this.letter.emit(letter)\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, HostBinding, HostListener, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appColor]'\r\n})\r\nexport class ColorDirective implements OnChanges{\r\n  @Input() state: string \r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  colors = [\"#888289\", \"#28ba62\", \"#fc7adf\"]\r\n  \r\n  ngOnChanges(): void {\r\n    if (this.state == \"match\") {\r\n      this.el.nativeElement.style.backgroundColor = this.colors[1].toString();\r\n    }\r\n    if (this.state == \"present\") {\r\n      this.el.nativeElement.style.backgroundColor = this.colors[2].toString();\r\n    }\r\n    if (this.state == \"notPresent\") {\r\n      this.el.nativeElement.style.backgroundColor = this.colors[0].toString();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appModal]'\r\n})\r\nexport class ModalDirective implements OnChanges {\r\n\r\n  @Input() isLose: boolean;\r\n  @Input() isWon: boolean;\r\n\r\n  constructor(private el: ElementRef) {\r\n    \r\n  }\r\n  ngOnChanges(): void {\r\n    \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomePageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomePage } from './home.page';\r\nimport { HomePageRoutingModule } from './home-routing.module';\r\nimport { BtnKeyboardComponent } from '../btn-keyboard/btn-keyboard.component';\r\nimport { LettersGridComponent } from '../letters-grid/letters-grid.component';\r\nimport { ColorDirective } from '../directives/color.directive';\r\nimport { ModalDirective } from '../directives/modal.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HomePageRoutingModule,    \r\n  ],\r\n  declarations: [HomePage, BtnKeyboardComponent, LettersGridComponent, ColorDirective, ModalDirective],\r\n})\r\nexport class HomePageModule {}\r\n","import { Component, OnChanges, OnInit } from '@angular/core';\r\nimport db from '../../data/db.json';\r\nimport { LocalStorageService } from '../service/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss']\r\n})\r\n\r\nexport class HomePage implements OnInit {\r\n  buttons = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n  \r\n  grid = [];\r\n  try: number = 0;\r\n  case = 0;\r\n  goodPlace: number = 0;\r\n  letter: string;\r\n  wordRandom:any;\r\n  wordToGuess: any[];\r\n  wordsToPlay = [];\r\n  allWordsList = [];\r\n  tryUser: number;\r\n  isWon: boolean = false;\r\n  isLose: boolean = false;\r\n  color: string;\r\n  countLetter: Object;\r\n  wonGame: number = 0;\r\n  parties: number = 1;\r\n  playedWords = [];\r\n  message: string;\r\n  isModalOpen = false;\r\n  letterInGoodPlace: boolean;\r\n\r\n  constructor(private localStorage: LocalStorageService) {\r\n    this.generateMatrice();\r\n  }\r\n\r\n  ngOnChanges() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.wordsToPlay = db.wordsToPlay;\r\n    this.allWordsList = db.allWordList;\r\n    this.wordRandom = this.wordsToPlay[Math.floor(Math.random() * this.wordsToPlay.length)];\r\n    this.wordToGuess = this.wordRandom.split('');\r\n    console.log(this.wordToGuess);\r\n  }\r\n  \r\n  generateMatrice() {\r\n    for (let grid = 0; grid < 6; grid++) {\r\n      let cols = [];\r\n      for (let col = 0; col < 5; col++) {\r\n        cols.push({\r\n          letter: \"\",\r\n          state: \"\",\r\n        })\r\n      }\r\n      this.grid.push(cols)\r\n    }\r\n  }\r\n\r\n  countLetterInWord(str: any) {\r\n    var obj = {};\r\n\r\n    for (let x = 0, length = str.length; x < length; x++) {\r\n      var l = str.charAt(x)\r\n      obj[l] = (isNaN(obj[l]) ? 1 : obj[l] + 1);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  valueIsExisted(str: string, arr: Array<string>) {\r\n    if (arr.includes(str)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  resetAllCounter() {\r\n    this.try = 0;\r\n    this.case = 0;\r\n    this.goodPlace = 0;\r\n  }\r\n  \r\n  validWord() {\r\n  console.log(this.goodPlace);\r\n  console.log(this.try);\r\n  console.log(this.isWon);\r\n  console.log(this.isLose);\r\n\r\n  let word = this.getUserWord(this.grid[this.try]);\r\n  let row = this.grid[this.try];    \r\n  this.goodPlace = 0;\r\n\r\n  if (this.try < 6) {\r\n    //Si le mot existe dans la liste des mots francais \r\n    if (this.valueIsExisted(word, this.allWordsList)) {\r\n      let countLetter = this.countLetterInWord(this.wordRandom);\r\n      for (let i = 0; i < 5; i++) {\r\n        // toutes les bonnes lettres sont-elles ? goodPlace == letterInGoodPlace\r\n        // si la lettre existe dans le mot \r\n        if (this.letterIsExisted(word, i)) {\r\n          let letter = this.getLetterWorld(this.wordRandom, i)\r\n          if (row[i].letter == this.wordToGuess[i]) {\r\n            this.letterAtTheGoodPlace(row, i, countLetter);\r\n          }\r\n          if (row[i].letter != this.wordToGuess[i]) {\r\n            this.letterNotAtTheGoodPlace(countLetter, row, i);\r\n          }\r\n        } else {\r\n          console.log(\"lettre n'existe pas dans le mot \")\r\n          row[i].state = \"notPresent\"\r\n        }\r\n      }\r\n    } else {\r\n      console.log(\"le mot n'existe pas\");\r\n    }\r\n  }\r\n  this.playedWords.push(word);\r\n\r\n  if (this.goodPlace == 5) {\r\n    this.setOpen(true)\r\n    this.isWon = true;\r\n    this.wonGame++;\r\n    this.parties++;\r\n    this.message = \"Gagné 😀\";\r\n    this.setWonParties();\r\n    this.setTry();\r\n  } else if((this.goodPlace < 5 && this.try == 5) || this.try > 5){\r\n    this.parties++;\r\n    this.message = \"Perdu 😓\"\r\n    this.resetAllCounter();\r\n    this.isLose = true;\r\n    this.setOpen(true)\r\n  } \r\n  this.try++;\r\n  this.case = 0;\r\n  this.setListWords();\r\n  this.setParties();\r\n }\r\n\r\n  private letterNotAtTheGoodPlace(countLetter: {}, row: any, i: number) {\r\n    if (countLetter[row[i].letter] > 0) {\r\n      row[i].state = \"present\";\r\n      countLetter[row[i].letter] = countLetter[this.wordToGuess[i]] - 1;\r\n    } else if (countLetter[row[i].letter] == 0) {\r\n      row[i].state = \"notPresent\";\r\n    }\r\n  }\r\n\r\n  private letterAtTheGoodPlace(row: any, i: number, countLetter: {}) {\r\n    row[i].state = \"match\";\r\n    countLetter[this.wordToGuess[i]] = countLetter[this.wordToGuess[i]] - 1;\r\n    this.goodPlace++;\r\n  }\r\n\r\n  private letterIsExisted(word: string, index:number) {\r\n      let letter = word[index];\r\n      if (this.valueIsExisted(letter, this.wordRandom)) {\r\n        return true;\r\n      }\r\n  }\r\n\r\n  private getLetterWorld(word: string, index: number) {\r\n    let letter = word[index];\r\n    if (this.valueIsExisted(letter, this.wordRandom)) {\r\n      return letter;\r\n    }\r\n  }\r\n\r\n  private getUserWord(grid:any) {\r\n    let arrLetter = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      arrLetter.push(grid[i].letter);\r\n    }\r\n    let word = arrLetter.join('');\r\n    return word;\r\n  }\r\n\r\n// ----------------------------------------------------------------------\r\n// --- METHODE MODAL\r\n  \r\n  setOpen(isOpen: boolean) {\r\n    this.isModalOpen = isOpen;\r\n  }\r\n\r\n// ----------------------------------------------------------------------\r\n// --- METHODES KEYBOARD\r\n\r\n  putLetter(letter: string) {\r\n    for (let i = 0; i < this.grid[this.try].length; i++) {\r\n      this.grid[this.try][this.case].letter = letter;\r\n    }\r\n    this.case++;\r\n  }\r\n\r\n  deleteLetter() {\r\n      this.grid[this.try][this.case - 1].letter = \"\";\r\n      this.case--;\r\n    if (this.case == -1) {\r\n      this.case = 0;\r\n    }\r\n  }\r\n  \r\n  getLetter(letter: string) {\r\n    if (this.case <= 4) {\r\n      this.putLetter(letter);\r\n    }\r\n    else if (this.case == 4) {\r\n      this.case = 0;\r\n    }\r\n  }\r\n  \r\n  //-----------------------------------------------------------------------------------\r\n  // --- LOCALSTORAGE ---\r\n  \r\n  async init() {\r\n    this.setListWords();\r\n    this.setParties();\r\n    this.setWonParties();\r\n    this.setTry();\r\n  }\r\n \r\n  async setListWords() {    \r\n    return await this.localStorage.setWords('words', this.playedWords);\r\n  }\r\n\r\n  async setParties() {    \r\n    return await this.localStorage.setParties('parties', this.parties);\r\n  }\r\n\r\n  async setWonParties() {\r\n    return await this.localStorage.setWonParties('wonGame', this.wonGame);\r\n  }\r\n\r\n  async setTry() { \r\n    return await this.localStorage.setTry('try', this.try)\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-letters-grid',\r\n  templateUrl: './letters-grid.component.html',\r\n  styleUrls: ['./letters-grid.component.scss'],\r\n})\r\nexport class LettersGridComponent implements OnInit {\r\n\r\n  @Input() word;\r\n\r\n  constructor() { \r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n"],"names":["Component","db","LocalStorageService","HomePage","constructor","localStorage","generateMatrice","ngOnChanges","ngOnInit","wordsToPlay","allWordsList","allWordList","wordRandom","Math","floor","random","length","wordToGuess","split","console","log","grid","cols","col","push","letter","state","countLetterInWord","str","obj","x","l","charAt","isNaN","valueIsExisted","arr","includes","resetAllCounter","try","case","goodPlace","validWord","isWon","isLose","word","getUserWord","row","countLetter","i","letterIsExisted","getLetterWorld","letterAtTheGoodPlace","letterNotAtTheGoodPlace","playedWords","setOpen","wonGame","parties","message","setWonParties","setTry","setListWords","setParties","index","arrLetter","join","isOpen","isModalOpen","putLetter","deleteLetter","getLetter","init","setWords","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}